## This configmap contains a config with multple inputs. One per each kind of log that can be processed for a Mule app: Init, App, Anypoint Monitoring. This also includes a kubernetes filter to include k8s metadata to records
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluent-bit-config
  namespace: log-test
  labels:
    k8s-app: fluent-bit
data:
  fluent-bit.conf: |
    [SERVICE]
        flush        15
        daemon       Off
        #use debug in case of troubleshooting
        log_level    info  
        http_server  Off
        http_listen  0.0.0.0
        http_port    2020
        storage.metrics on
        Parsers_File  parsers.conf
    @INCLUDE input-kubernetes.conf
    @INCLUDE filter-kubernetes.conf
    @INCLUDE output.conf
  input-kubernetes.conf: |
    [INPUT]
        Name tail
        Path /var/log/containers/*_app-*.log
        Tag appContainer.*
        multiline.parser appParser
        Mem_Buf_Limit 100MB
        Buffer_Max_Size  10MB
        Read_from_head true
        Skip_Long_Lines Off
        Skip_Empty_Lines On
        Refresh_Interval 5
        Buffer_Chunk_Size 64k
    [INPUT]
        Name tail
        Path /var/log/containers/*_anypoint-monitoring-*.log
        Tag monitoringContainer.*
        Parser monitoringParser
        Mem_Buf_Limit 100MB
        Buffer_Max_Size  10MB
        Read_from_head true
        Skip_Long_Lines Off
        Skip_Empty_Lines On
        Refresh_Interval 5
        Buffer_Chunk_Size 64k
    [INPUT]
        Name tail
        Path /var/log/containers/*_init-*.log
        Tag appInit.*
        Parser appInit
        Mem_Buf_Limit 100MB
        Buffer_Max_Size  10MB
        Read_from_head true
        Skip_Long_Lines Off
        Skip_Empty_Lines On
        Refresh_Interval 5
        Buffer_Chunk_Size 64k
  filter-kubernetes.conf: |
     [FILTER]
            Name                kubernetes
            Match               appContainer.*
            Kube_URL            https://kubernetes.default.svc:443
            Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
            Kube_Tag_Prefix     appContainer.var.log.containers.
            Merge_Log           On
            K8S-Logging.Parser  On
            K8S-Logging.Exclude On
            Annotations         Off
            Labels              On
     [FILTER]
            Name                kubernetes
            Match               monitoringContainer.*
            Kube_URL            https://kubernetes.default.svc:443
            Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
            Kube_Tag_Prefix     monitoringContainer.var.log.containers.
            Merge_Log           On
            K8S-Logging.Parser  On
            K8S-Logging.Exclude On
            Annotations         Off
            Labels              On
      [FILTER]
            Name                kubernetes
            Match               appInit.*
            Kube_URL            https://kubernetes.default.svc:443
            Kube_CA_File        /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            Kube_Token_File     /var/run/secrets/kubernetes.io/serviceaccount/token
            Kube_Tag_Prefix     appInit.var.log.containers.
            Merge_Log           On
            K8S-Logging.Parser  On
            K8S-Logging.Exclude On
            Annotations         Off
            Labels              On
  parsers.conf: |
    [MULTILINE_PARSER]
            name          appParser
            type          regex
            flush_timeout 1000
            key_content log
            # rules   |   state name   | regex pattern                 | next state name
            # --------|----------------|-----------------------------------------------------------------------
            rule         "start_state"   "/\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{9}Z stdout [PF] \[\d{4}-\d{2}-\d{2} \d{2}:\d{2}:\d{2}.\d{3}\] (?:INFO|DEBUG|ERROR|WARNING|TRACE).*.\[\[MuleRuntime\].uber.*: \[.*.\](.*)/"  "cont"
            rule         "cont"          "/\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{9}Z stdout [F] (?!.*INFO|TRACE|DEBUG|ERROR|WARNING)(.*)/"  "cont"
    [PARSER]
            Name   monitoringParser
            Format regex
            Regex  \d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{9}Z (?:stderr|stdout) F (.*)
            Time_Key time
            Time_Format %d/%b/%Y:%H:%M:%S %z
    [PARSER]
            Name   appInit
            Format regex
            Regex  (\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}.\d{9}Z (?:stderr|stdout) F .*)
            Time_Key time
            Time_Format %d/%b/%Y:%H:%M:%S %z
  output.conf: |
    # Beginning of the Azure outputs
    [OUTPUT]
        Name            azure
        Match           appContainer.*
        Customer_ID     ${WorkspaceIdK8s}
        Shared_Key      ${SharedKeyK8s}
        Log_Type        ${LogNameAppContainer}
    [OUTPUT]
        Name            azure
        Match           monitoringContainer.*
        Customer_ID     ${WorkspaceIdK8s}
        Shared_Key      ${SharedKeyK8s}
        Log_Type        ${LogNameMonitoringContainer} 
    [OUTPUT]
        Name            azure
        Match           appInit.*
        Customer_ID     ${WorkspaceIdK8s}
        Shared_Key      ${SharedKeyK8s}
        Log_Type        ${LogNameInitContainer}
    # End of the Azure outputs    
    
    # The following output is useful for local troubleshooting. Uncomment it out in case you need to see the output
    #[OUTPUT]
    #    Name            stdout
    #    Match           *